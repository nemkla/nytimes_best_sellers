{"ast":null,"code":"var _jsxFileName = \"/Users/knemeth/React/nytimes_best_sellers/src/components/SearchBooks.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"recompose\";\nimport { doFetchInitBook, doFetchSuccessBook, doFetchFailureBook } from \"../actions/book\";\nimport { doFetchInitCategory, doFetchSuccessCategory, doFetchFailureCategory, doSelectCategory } from \"../actions/category\";\nimport BookList from \"./BookList\";\nimport CategoryForm from \"./CategoryForm\";\nimport \"../styles/SearchBooks.css\";\n\nfunction SearchBooks({\n  books,\n  categories,\n  doSelectCategory,\n  doFetchInitCategory,\n  doFetchSuccessCategory,\n  doFetchFailureCategory,\n  doFetchInitBook,\n  doFetchSuccessBook,\n  doFetchFailureBook\n}) {\n  const URL = \"https://api.nytimes.com/svc/books/v3/lists/names.json?api-key=OGDK7aGVDlAT6L8KaYnfASlYi6ydHveG\";\n  const [url, setUrl] = useState(URL);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        let didCancel = false;\n\n        const fetchData = async () => {\n          const init = () => url === URL ? doFetchInitCategory() : doFetchInitBook();\n\n          const failure = () => url === URL ? doFetchFailureCategory() : doFetchFailureBook();\n\n          init();\n\n          try {\n            const response = await fetch(url);\n\n            if (!response.ok) {\n              throw Error(response.statusText);\n            }\n\n            const data = await response.json();\n\n            if (!didCancel) {\n              const success = () => url === URL ? doFetchSuccessCategory(data.results) : doFetchSuccessBook(data.results.books);\n\n              success();\n            }\n          } catch (error) {\n            if (!didCancel) {\n              failure();\n            }\n          }\n        };\n\n        fetchData();\n        return () => {\n          didCancel = true;\n        };\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    fetchData();\n  }, [url]);\n\n  const handleOnSubmit = event => {\n    event.preventDefault();\n    categories.selected !== \"\" ? setUrl(`https://api.nytimes.com/svc/books/v3/lists/current/${categories.selected}.json?api-key=OGDK7aGVDlAT6L8KaYnfASlYi6ydHveG`) : alert(\"Category cannot be empty!!!\");\n  };\n\n  const handleOnChange = name => doSelectCategory(name);\n\n  const withMaybe = conditionalRenderingFn => Component => props => conditionalRenderingFn(props) ? null : /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }));\n\n  const withEither = (conditionalRenderingFn, EitherComponent) => Component => props => conditionalRenderingFn(props) ? /*#__PURE__*/React.createElement(EitherComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }));\n\n  const LoadingIndicator = () => /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 34\n    }\n  }, \"Loading ...\");\n\n  const ErrorMessage = () => /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 30\n    }\n  }, \"Oops, something went wrong ...\");\n\n  const EmptyMessage = () => /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 30\n    }\n  }, \"No Data Available ...\");\n\n  const isLoadingConditionFunction = props => props.isLoading;\n\n  const isErrorConditionFunction = props => props.isError;\n\n  const isNullConditionFunction = props => !props.data;\n\n  const isEmptyConditionFunction = props => !props.data.length;\n\n  const withConditionalRenderings = compose(withEither(isLoadingConditionFunction, LoadingIndicator), withEither(isErrorConditionFunction, ErrorMessage), withMaybe(isNullConditionFunction), withEither(isEmptyConditionFunction, EmptyMessage));\n  const FormWithConditionalRendering = withConditionalRenderings(CategoryForm);\n  const BookListWithConditionalRendering = withConditionalRenderings(BookList);\n  console.log('Render: SearchBooks');\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormWithConditionalRendering, Object.assign({}, categories, {\n    handleOnSubmit: handleOnSubmit,\n    handleOnChange: handleOnChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(BookListWithConditionalRendering, Object.assign({}, books, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  })));\n}\n\nconst mapStateToProps = ({\n  bookState,\n  categoryState\n}) => ({\n  books: bookState,\n  categories: categoryState\n});\n\nconst mapDispatchToProps = dispatch => ({\n  doSelectCategory: query => dispatch(doSelectCategory(query)),\n  doFetchInitCategory: query => dispatch(doFetchInitCategory(query)),\n  doFetchSuccessCategory: query => dispatch(doFetchSuccessCategory(query)),\n  doFetchFailureCategory: query => dispatch(doFetchFailureCategory(query)),\n  doFetchInitBook: query => dispatch(doFetchInitBook(query)),\n  doFetchSuccessBook: query => dispatch(doFetchSuccessBook(query)),\n  doFetchFailureBook: query => dispatch(doFetchFailureBook(query))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchBooks);","map":{"version":3,"sources":["/Users/knemeth/React/nytimes_best_sellers/src/components/SearchBooks.js"],"names":["React","useState","useEffect","connect","compose","doFetchInitBook","doFetchSuccessBook","doFetchFailureBook","doFetchInitCategory","doFetchSuccessCategory","doFetchFailureCategory","doSelectCategory","BookList","CategoryForm","SearchBooks","books","categories","URL","url","setUrl","fetchData","didCancel","init","failure","response","fetch","ok","Error","statusText","data","json","success","results","error","console","handleOnSubmit","event","preventDefault","selected","alert","handleOnChange","name","withMaybe","conditionalRenderingFn","Component","props","withEither","EitherComponent","LoadingIndicator","ErrorMessage","EmptyMessage","isLoadingConditionFunction","isLoading","isErrorConditionFunction","isError","isNullConditionFunction","isEmptyConditionFunction","length","withConditionalRenderings","FormWithConditionalRendering","BookListWithConditionalRendering","log","mapStateToProps","bookState","categoryState","mapDispatchToProps","dispatch","query"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"recompose\";\nimport {\n  doFetchInitBook,\n  doFetchSuccessBook,\n  doFetchFailureBook\n} from \"../actions/book\";\nimport {\n  doFetchInitCategory,\n  doFetchSuccessCategory,\n  doFetchFailureCategory,\n  doSelectCategory\n} from \"../actions/category\";\nimport BookList from \"./BookList\";\nimport CategoryForm from \"./CategoryForm\";\n\n\nimport \"../styles/SearchBooks.css\";\n\nfunction SearchBooks({books, categories, doSelectCategory, doFetchInitCategory, doFetchSuccessCategory, doFetchFailureCategory, doFetchInitBook, doFetchSuccessBook, doFetchFailureBook }) {\n  const URL =\n    \"https://api.nytimes.com/svc/books/v3/lists/names.json?api-key=OGDK7aGVDlAT6L8KaYnfASlYi6ydHveG\";\n  const [url, setUrl] = useState(URL);\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        let didCancel = false;\n        const fetchData = async () => {\n          const init = () =>\n            url === URL\n              ? doFetchInitCategory()\n              : doFetchInitBook();\n          const failure = () =>\n            url === URL\n              ? doFetchFailureCategory()\n              : doFetchFailureBook();\n\n          init();\n          try {\n            const response = await fetch(url);\n            if (!response.ok) {\n              throw Error(response.statusText);\n            }\n            const data = await response.json();\n\n            if (!didCancel) {\n              const success  = () =>\n                url === URL\n                  ? doFetchSuccessCategory(data.results)\n                  : doFetchSuccessBook(data.results.books);\n\n            success();\n            }\n          } catch (error) {\n            if (!didCancel) {\n              failure();\n            }\n          }\n        };\n\n        fetchData();\n        return () => {\n          didCancel = true;\n        };\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    fetchData();\n  }, [url]);\n\n  const handleOnSubmit = (event) => {\n    event.preventDefault();\n    categories.selected !== \"\"\n      ? setUrl(\n          `https://api.nytimes.com/svc/books/v3/lists/current/${categories.selected}.json?api-key=OGDK7aGVDlAT6L8KaYnfASlYi6ydHveG`\n        )\n      : alert(\"Category cannot be empty!!!\");\n  };\n\n  const handleOnChange = (name) => doSelectCategory(name);\n\n  const withMaybe = (conditionalRenderingFn) => (Component) => (props) =>\n    conditionalRenderingFn(props)\n      ? null\n      : <Component { ...props } />\n\n  const withEither = (conditionalRenderingFn, EitherComponent) => (Component) => (props) =>\n    conditionalRenderingFn(props)\n      ? <EitherComponent />\n      : <Component { ...props } />\n\n  const LoadingIndicator = () => <p>Loading ...</p>;\n  const ErrorMessage = () => <p>Oops, something went wrong ...</p>;\n  const EmptyMessage = () => <p>No Data Available ...</p>;\n\n  const isLoadingConditionFunction = (props) => props.isLoading;\n  const isErrorConditionFunction = (props) => props.isError;\n  const isNullConditionFunction = (props) => !props.data;\n  const isEmptyConditionFunction = (props) => !props.data.length;\n\n  const withConditionalRenderings = compose(\n  withEither(isLoadingConditionFunction, LoadingIndicator),\n  withEither(isErrorConditionFunction, ErrorMessage),\n  withMaybe(isNullConditionFunction),\n  withEither(isEmptyConditionFunction, EmptyMessage));\n\n  const FormWithConditionalRendering = withConditionalRenderings(CategoryForm);\n  const BookListWithConditionalRendering = withConditionalRenderings(BookList);\n\n  console.log('Render: SearchBooks');\n  return (\n    <>\n      <FormWithConditionalRendering { ...categories } handleOnSubmit={handleOnSubmit} handleOnChange={handleOnChange} />\n      <BookListWithConditionalRendering  { ...books } />\n    </>\n  );\n}\n\nconst mapStateToProps = ({bookState, categoryState}) => ({\n  books: bookState,\n  categories: categoryState\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  doSelectCategory: query => dispatch(doSelectCategory(query)),\n  doFetchInitCategory: query => dispatch(doFetchInitCategory(query)),\n  doFetchSuccessCategory: query => dispatch(doFetchSuccessCategory(query)),\n  doFetchFailureCategory: query => dispatch(doFetchFailureCategory(query)),\n  doFetchInitBook: query => dispatch(doFetchInitBook(query)),\n  doFetchSuccessBook: query => dispatch(doFetchSuccessBook(query)),\n  doFetchFailureBook: query => dispatch(doFetchFailureBook(query))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SearchBooks);\n"]},"metadata":{},"sourceType":"module"}