{"ast":null,"code":"var _jsxFileName = \"/Users/knemeth/React/nytimes_best_sellers/src/components/BookList.js\";\nimport React, { useReducer, useState } from \"react\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n    marginBottom: 12\n  },\n  title: {\n    fontSize: 14\n  },\n  pos: {\n    marginBottom: 12\n  }\n});\n\nfunction BooksList({\n  books,\n  classes\n}) {\n  const reducer = (state, action) => {\n    console.log('********************');\n    console.log(`state: ${state}`);\n    console.log(`action: ${action}`);\n    console.log('********************');\n\n    switch (action.type) {\n      case 'SELECTED':\n        return state.map(item => {\n          if (item.id === action.id) {\n            return { ...item,\n              selected: true\n            };\n          } else {\n            return item;\n          }\n        });\n\n      case 'UNSELECTED':\n        return state.map(item => {\n          if (item.id === action.id) {\n            return { ...item,\n              selected: false\n            };\n          } else {\n            return item;\n          }\n        });\n\n      default:\n        return state;\n    }\n  };\n\n  const initialTodos = [{\n    id: 'a',\n    task: 'Learn React',\n    complete: false\n  }, {\n    id: 'b',\n    task: 'Learn Firebase',\n    complete: false\n  }]; //const inputItems = [];\n  //const inputItems = books.map(book => (return {...book, selected: false }));\n  //const inputItems = books.map((book) => {return {...book, selected:false}});\n\n  const [items, dispatch] = useReducer(reducer, initialTodos);\n\n  const handleChange = item => {\n    dispatch({\n      type: item.selected ? 'UNSELECTED' : 'SELECTED',\n      id: item.primary_isbn10\n    });\n  };\n\n  console.log('********************');\n  console.log(`Books: ${books}`);\n  console.log(`Items: ${items}`); //console.log(`inputItems: ${inputItems}`);\n\n  console.log('********************');\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, items.map((book, i) => /*#__PURE__*/React.createElement(Card, {\n    key: i,\n    className: classes.root,\n    style: {\n      margin: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: book.selected,\n    onChange: () => handleChange(book),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.title,\n    color: \"textPrimary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, i + 1, \". \", book.title), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.pos,\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, book.contributor), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  }, book.description)))));\n}\n\nexport default withStyles(useStyles)(BooksList);","map":{"version":3,"sources":["/Users/knemeth/React/nytimes_best_sellers/src/components/BookList.js"],"names":["React","useReducer","useState","makeStyles","withStyles","Card","CardContent","Typography","useStyles","root","minWidth","marginBottom","title","fontSize","pos","BooksList","books","classes","reducer","state","action","console","log","type","map","item","id","selected","initialTodos","task","complete","items","dispatch","handleChange","primary_isbn10","book","i","margin","contributor","description"],"mappings":"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","sourcesContent":["import React, {useReducer, useState} from \"react\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n    marginBottom: 12,\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\n\nfunction BooksList ({books, classes}) {\n\n  const reducer = (state, action) => {\n    console.log('********************');\n    console.log(`state: ${state}`);\n    console.log(`action: ${action}`);\n    console.log('********************');\n    switch (action.type) {\n      case 'SELECTED':\n        return state.map(item => {\n          if (item.id === action.id) {\n            return { ...item, selected: true };\n          } else {\n            return item;\n          }\n        });\n      case 'UNSELECTED':\n        return state.map(item => {\n          if (item.id === action.id) {\n            return { ...item, selected: false };\n          } else {\n            return item;\n          }\n        });\n      default:\n        return state;\n    }\n  };\n  const initialTodos = [\n    {\n      id: 'a',\n      task: 'Learn React',\n      complete: false,\n    },\n    {\n      id: 'b',\n      task: 'Learn Firebase',\n      complete: false,\n    },\n  ];\n    //const inputItems = [];\n    //const inputItems = books.map(book => (return {...book, selected: false }));\n    //const inputItems = books.map((book) => {return {...book, selected:false}});\n    const [items, dispatch] = useReducer(reducer, initialTodos);\n\n\n    const handleChange = item => {\n      dispatch({\n        type: item.selected ? 'UNSELECTED' : 'SELECTED',\n        id: item.primary_isbn10,\n      });\n    }\n    console.log('********************');\n    console.log(`Books: ${books}`);\n    console.log(`Items: ${items}`);\n    //console.log(`inputItems: ${inputItems}`);\n    console.log('********************');\n\n    return (\n      <React.Fragment>\n        {items.map((book, i) => (\n          <Card key={i} className={classes.root} style={{ margin: \"10px\" }}>\n            <CardContent>\n              <input\n                type=\"checkbox\"\n                checked={book.selected}\n                onChange={() => handleChange(book)}\n              />\n              <Typography className={classes.title} color=\"textPrimary\">\n                {i + 1}. {book.title}\n              </Typography>\n              <Typography className={classes.pos} color=\"textSecondary\">\n                {book.contributor}\n              </Typography>\n              <Typography variant=\"body2\" component=\"p\">\n                {book.description}\n              </Typography>\n            </CardContent>\n          </Card>\n        ))}\n      </React.Fragment>\n    );\n}\nexport default withStyles(useStyles)(BooksList);\n"]},"metadata":{},"sourceType":"module"}